* Emacs-WSL

This guide shows you how to run Emacs with the Windows Subsystem for Linux WSL
(Version 1 and 2) on Windows 10 using Ubuntu 18.04 LTS as Linux distribution and
VcXsrv as X server to run Emacs in a graphical display.

#+caption: Graphical Emacs in Windows 10 with WSL
[[./img/emacs-wsl.png]]

* TODO Contents

* TODO Install WSL 1 or WSL 2

* TODO Install Ubuntu

* TODO Install Emacs

...

To try out if Emacs is working just run it directly in the terminal with ~emacs
-nw~.

* Install Windows X-Server VcXsrv

An X-server lets you access a Linux application or desktop environmentâ€™s graphic
user interface (GUI). This guide is [[https://sourceforge.net/projects/vcxsrv/][VcXsrv]] (free, open source, GPLv3).

** Installation

Download VcXsrv from [[https://sourceforge.net/projects/vcxsrv/]] and install it.
Check out the next section about the firewall configuration before launching it.

** Windows Defender Firewall Configuration

The first time you launch VcXsrv you are notified that Windows Defender Firewall
has blocked some features.

#+caption: Windows Defend Firewall Dialog
[[./img/vcxsrv-windows-defender-firewall.png]]

You have to allow VcXsrv to communicate on:

- *WSL 1*: Private networks
- *WSL 2*: Private and public networks.

The following inbound rules are added:

- *WSl 1* :: [[./img/vcxsrv-wsl1-firewall-inbound-rules.png]]
- *WSL 2* :: [[./img/vcxsrv-wsl2-firewall-inbound-rules.png]]

If you missed this step or are not sure what you've chosen or if you are
switching from WSL 1 to WSL 2 you can retrigger this dialog by deleting the
inbound rules (admin rights needed) and restart VcXsrv. The inbound rules shown
above can be found at @@html:<kbd>@@WIN@@html:</kbd>@@ Windows Defender Wall >
Advanced Settings (or @@html:<kbd>@@WIN-r wf.msc RET@@html:</kbd>@@).

*** WSL 2 Additional Firewall Configuration

To make the VcXsrv work with WSL 2 you have to disable access control. Disabling
the user access control with the ~-ac~ flag has some [[https://www.xfree86.org/current/Xserver.1.html][security issues]]:

#+BEGIN_QUOTE
-ac disables host-based access control mechanisms. Enables access by any host,
and permits any host to modify the access control list. Use with extreme
caution. This option exists primarily for running test suites remotely.
#+END_QUOTE

Therefore we want to restrict the access as much as possible.

Unfortunately you can't modify the firewall rules if you have *no admin rights*.
In that case you have to live with the security issue (not sure how severe it
is) or use WSL 1 or use Emacs in the terminal.

If you have *admin rights* you can add an inbound firewall rule to restrict
access as much as possible. As the IP used by WSL 2 is dynamic a powershell
script is provided to create/update the rule.

Make sure that you disable the existing inbound rules:

1. Go to the inbound rule settings with @@html:<kbd>@@WIN@@html:</kbd>@@ Windows
   Defender Wall > Advanced Settings (or @@html:<kbd>@@WIN-r wf.msc
   RET@@html:</kbd>@@).
2. Search for VcXsrv entries (there should be 2) and disable all.

**** TODO

Then run the powershell script to create/update the firewall rule.

If VcXsrv was running before the firewall rules was updated it has to be
restarted.

** Run VcXsrv

To run VcXsrv use the batch-script provided. If you haven't used the default installation path
you have to adapt the script:

*** TODO

- WSL 1

  #+BEGIN_SRC bat
    start "" "C:\Program Files\VcXsrv\vcxsrv.exe" :0 -multiwindow -clipboard -wgl
  #+END_SRC

- WSL 2

  #+BEGIN_SRC bat
    start "" "C:\Program Files\VcXsrv\vcxsrv.exe" :0 -multiwindow -clipboard -wgl -ac
  #+END_SRC

  If you are using the additional firewall rule make sure to update the rule
  before launching VcXsrv.

If VcXsrv is already running it will show an error message.

* Run Emacs in Graphical Display

* TODO Optional Additions

* TODO FAQ

** Where is the root folder located?

The root is accessible as ~\\wsl$~ in file explorer followed by the
distribution. You can show the current distribution name by running ~wsl -l -q~
in cmd.

** How to access Linux files from Windows?

Run ~explorer.exe .~ in WSL to open the Windows File Explorer at the current
location. The path will start with ~\\wsl$~ unless it is a mounted drive. In the
File Explorer the files and folders can be copied, moved and edited as usual
(see this blog [[https://devblogs.microsoft.com/commandline/whats-new-for-wsl-in-windows-10-version-1903/][post]]).

** How start WSL from File Explorer in the current folder?

To start WSL from Windows File Explorer just type ~wsl~ into the location input
box or hold down ~Shift~ while right-clicking and select ~Open Linux shell here~
from the context menu. If it's a network drive it has to be mounted else this
will not work.

#+caption: WSL from windows explorer
[[./img/wsl-from-windows-explorer.png]]

** What ways are there to run WSL?

See [[https://docs.microsoft.com/en-us/windows/wsl/wsl-config#ways-to-run-wsl]].

* TODO Troubleshooting

** The GUI is not loading

Check your firewall settings.

